@import url('https://unpkg.com/normalize.css') layer(normalize);

@layer normalize, base, demo;

@layer demo {
  body {
    background-color: #fff;
    color: #000;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 1rem;
    padding-block: 2rem;
  }

  h1,
  p {
    margin: 0;
  }

  h1.fluid {
    --font-size-min: 22;
    --font-level: 4.25;
  }

  h3 {
    white-space: nowrap;
    margin: 0;
  }

  body > p {
    width: 74ch;
    max-width: calc(100% - 4rem);
    text-wrap: balance;
    font-family: monospace;
    margin-bottom: 4rem;
    line-height: 1.5;
    opacity: 0.8;
    font-weight: 400;

    @media (max-width: 768px) {
      text-align: center;
    }
  }

  li :is(svg, h3) {
    opacity: 0.6;
    transition: opacity calc(var(--speed) * 1.2) var(--easing);
  }

  li :is(a, p) {
    opacity: 0;
    transition: opacity calc(var(--speed) * 1.2) var(--easing);
    width: fit-content;
  }

  li img {
    filter: grayscale(1) brightness(1.5);
    scale: 1.1;
    transition-property: filter, scale;
    transition-duration: calc(var(--speed) * 1.2);
    transition-timing-function: var(--easing);
  }

  li:hover :is(a, p, h3, svg) {
    opacity: var(--opacity, 1);
  }
  li:hover :is(a, p) {
    transition-delay: calc(var(--speed) * 0.25);
  }

  li:hover img {
    filter: grayscale(0) brightness(1);
    scale: 1;
    transition-delay: calc(var(--speed) * 0.25);
  }

  article {
    width: 100%;
    height: 100%;
    position: relative;
    font-family: monospace;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    gap: 1rem;
    padding-inline: 1rem;
    padding-bottom: 1rem;
    overflow: hidden;

    h3 {
      writing-mode: vertical-rl;
      text-orientation: mixed;
      position: absolute;
      top: 1rem;
      left: 0.5rem;
      font-size: 1rem;
      font-weight: 300;
      text-transform: uppercase;
      font-family: monospace;
    }

    svg {
      width: 18px;
      fill: none;
    }

    p {
      font-size: 13px;
      text-wrap: balance;
      line-height: 1.25;
      --opacity: 0.8;
    }

    a {
      position: relative;
      bottom: 1rem;
      height: 18px;
      line-height: 1;
      color: #000;
      &:is(:focus-visible, :hover) {
        outline: none;
        span {
          text-decoration: underline;
          text-underline-offset: 4px;
        }
      }

      span {
        display: inline-block;
        line-height: 18px;
        translate: 0;
        font-weight: 500;
      }
    }

    img {
      position: absolute;
      pointer-events: none;
      inset: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      
    }
  }

  :root {
    --gap: 8px;
    --base: clamp(2rem, 8cqi, 80px);
    --easing: ease-in-out;
    --speed: 0.6s;
  }

  ul {
    display: flex;
    gap: var(--gap);
    list-style-type: none;
    justify-content: center;
    padding: 0;
    height: clamp(300px, 40dvh, 474px);
    margin: 0;
    max-width: calc(100% - 4rem);
    transition: all var(--speed) var(--easing);
  }

  li {
    background-color: #fff;
    color: #000;
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    border: 1px solid #000;
    transition: all var(--speed) var(--easing);
    flex: 1;
  }

  ul:hover li {
    flex: 1;
  }

  ul:hover li:hover {
    flex: 10;
  }
}

@layer base {
  :root {
    --font-size-min: 16;
    --font-size-max: 20;
    --font-ratio-min: 1.2;
    --font-ratio-max: 1.33;
    --font-width-min: 375;
    --font-width-max: 1500;
  }

  html {
    color-scheme: light;
  }

  :where(.fluid) {
    --fluid-min: calc(
      var(--font-size-min) * pow(var(--font-ratio-min), var(--font-level, 0))
    );
    --fluid-max: calc(
      var(--font-size-max) * pow(var(--font-ratio-max), var(--font-level, 0))
    );
    --fluid-preferred: calc(
      (var(--fluid-max) - var(--fluid-min)) /
        (var(--font-width-max) - var(--font-width-min))
    );
    --fluid-type: clamp(
      (var(--fluid-min) / 16) * 1rem,
      ((var(--fluid-min) / 16) * 1rem) -
        (((var(--fluid-preferred) * var(--font-width-min)) / 16) * 1rem) +
        (var(--fluid-preferred) * var(--variable-unit, 100vi)),
      (var(--fluid-max) / 16) * 1rem
    );
    font-size: var(--fluid-type);
  }

  *,
  *:after,
  *:before {
    box-sizing: border-box;
  }

  body {
    display: grid;
    place-items: center;
    min-height: 100vh;
    font-family: 'SF Pro Text', 'SF Pro Icons', 'AOS Icons', 'Helvetica Neue',
      Helvetica, Arial, sans-serif, system-ui;
  }

  body::before {
    --size: 45px;
    --line: rgba(0, 0, 0, 0.3);
    content: '';
    height: 100vh;
    width: 100vw;
    position: fixed;
    background: linear-gradient(
          90deg,
          var(--line) 1px,
          transparent 1px var(--size)
        )
        50% 50% / var(--size) var(--size),
      linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
        var(--size) var(--size);
    mask: linear-gradient(-20deg, transparent 50%, white);
    top: 0;
    transform-style: flat;
    pointer-events: none;
    z-index: -1;
  }

  .bear-link {
    color: #000;
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 48px;
    aspect-ratio: 1;
    display: grid;
    place-items: center;
    opacity: 0.8;
  }

  :where(.x-link, .bear-link):is(:hover, :focus-visible) {
    opacity: 1;
  }

  .bear-link svg {
    width: 75%;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
}
